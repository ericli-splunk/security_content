name: Credential Dumping via Copy Command from Shadow Copy
id: d8c406fe-23d2-45f3-a983-1abe7b83ff3b
version: 3
date: '2023-07-13'
author: Patrick Bareiss, Splunk
status: production
type: TTP
description: The following analytic detects the use of the copy command to dump credentials from a shadow copy. It utilizes a Splunk query to search for specific processes that indicate credential dumping activity. The query looks for processes with command lines that include references to certain files, such as "sam", "security", "system", and "ntds.dit", located in system directories like "system32" or "windows". Identifying this behavior is crucial for a Security Operations Center (SOC) because credential dumping is a common technique used by attackers to obtain sensitive login information and gain unauthorized access to systems. By detecting this activity, the SOC can quickly respond and prevent further compromise. If this analytic identifies a true positive, it suggests that an attacker is attempting to extract credentials from a shadow copy. This can lead to serious security breaches, as compromised credentials can be used to escalate privileges, move laterally within the network, or gain unauthorized access to sensitive data. To effectively implement this analytic, ensure that you are ingesting endpoint process logs into your Splunk instance. It is important to note that there may be false positives, as legitimate processes may also reference these files. Therefore, during triage, it is crucial to review the process details, including the source and the command being executed. Additionally, capture and analyze any relevant on-disk artifacts and investigate concurrent processes to determine the source of the attack. By following these steps, analysts can detect potential threats earlier and mitigate the risks associated with credential dumping.
data_source:
- Sysmon Event ID 1
search: '| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time)
  as lastTime from datamodel=Endpoint.Processes where `process_cmd` (Processes.process=*\\system32\\config\\sam*
  OR Processes.process=*\\system32\\config\\security* OR Processes.process=*\\system32\\config\\system*
  OR Processes.process=*\\windows\\ntds\\ntds.dit*) by Processes.dest Processes.user
  Processes.process_name Processes.process  Processes.parent_process Processes.original_file_name
  Processes.process_id Processes.parent_process_id | `drop_dm_object_name(Processes)`
  | `security_content_ctime(firstTime)`| `security_content_ctime(lastTime)` | `credential_dumping_via_copy_command_from_shadow_copy_filter` '
how_to_implement: The detection is based on data that originates from Endpoint Detection and Response (EDR) agents. These agents are designed to provide security-related telemetry from the endpoints where the agent is installed. To implement this search, you must ingest logs that contain the process GUID, process name, and parent process. Additionally, you must ingest complete command-line executions. These logs must be processed using the appropriate Splunk Technology Add-ons that are specific to the EDR product. The logs must also be mapped to the `Processes` node of the `Endpoint` data model. Use the Splunk Common Information Model (CIM) to normalize the field names and speed up the data modeling process.
known_false_positives: unknown
references:
- https://2017.zeronights.org/wp-content/uploads/materials/ZN17_Kheirkhabarov_Hunting_for_Credentials_Dumping_in_Windows_Environment.pdf
tags:
  analytic_story:
  - Credential Dumping
  asset_type: Endpoint
  confidence: 90
  impact: 90
  message: An instance of $parent_process_name$ spawning $process_name$ was identified
    on endpoint $dest$ by user $user$ attempting to copy SAM and NTDS.dit for offline
    password cracking.
  mitre_attack_id:
  - T1003.003
  - T1003
  observable:
  - name: user
    type: User
    role:
    - Victim
  - name: dest
    type: Hostname
    role:
    - Victim
  - name: parent_process_name
    type: Process
    role:
    - Parent Process
  - name: process_name
    type: Process
    role:
    - Child Process
  product:
  - Splunk Enterprise
  - Splunk Enterprise Security
  - Splunk Cloud
  required_fields:
  - _time
  - Processes.dest
  - Processes.user
  - Processes.parent_process_name
  - Processes.parent_process
  - Processes.original_file_name
  - Processes.process_name
  - Processes.process
  - Processes.process_id
  - Processes.parent_process_path
  - Processes.process_path
  - Processes.parent_process_id
  risk_score: 81
  security_domain: endpoint
tests:
- name: True Positive Test
  attack_data:
  - data: https://media.githubusercontent.com/media/splunk/attack_data/master/datasets/attack_techniques/T1003.003/atomic_red_team/windows-sysmon.log
    source: XmlWinEventLog:Microsoft-Windows-Sysmon/Operational
    sourcetype: xmlwineventlog
